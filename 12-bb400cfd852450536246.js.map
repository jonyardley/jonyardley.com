{"version":3,"sources":["webpack:///./node_modules/random-words/index.js","webpack:///./node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.browser.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["wordList","words","options","word","maxLength","wordUsed","rightSize","generateRandomWord","length","generateWordWithMaxLength","randInt","lessThan","Math","floor","random","exactly","min","max","wordsPerString","formatter","separator","total","results","token","relativeIndex","i","push","join","module","exports","isIE","document","documentElement","currentStyle","HIDDEN_TEXTAREA_STYLE","min-height","max-height","height","visibility","overflow","position","z-index","top","right","SIZING_STYLE","computedStyleCache","hiddenTextarea","createElement","forceHiddenStyles","node","Object","keys","forEach","key","style","setProperty","calculateNodeHeight","uiTextNode","uid","useCache","minRows","maxRows","parentNode","body","appendChild","nodeStyling","window","getComputedStyle","sizingStyle","reduce","obj","name","getPropertyValue","boxSizing","width","parseFloat","paddingSize","borderSize","nodeInfo","calculateNodeStyling","value","placeholder","minHeight","Infinity","maxHeight","scrollHeight","singleRowHeight","valueRowCount","rowCount","setAttribute","noop","react_textarea_autosize_esm_browser_TextareaAutosize","_React$Component","TextareaAutosize","props","_this","call","this","_onRef","_ref","inputRef","current","_onChange","event","_controlled","_resizeComponent","onChange","assertThisInitialized","callback","nodeHeight","_uid","useCacheForDOMMeasurements","state","setState","undefined","_resizeLock","inheritsLoose","_proto","prototype","render","_this$props","onHeightChange","source","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","esm_extends","react","ref","componentDidMount","_this2","_resizeListener","addEventListener","componentDidUpdate","prevProps","prevState","componentWillUnmount","removeEventListener","defaultProps","__webpack_exports__"],"mappings":"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","file":"12-bb400cfd852450536246.js","sourcesContent":["var wordList = [// Borrowed from xkcd password generator which borrowed it from wherever\n\"ability\", \"able\", \"aboard\", \"about\", \"above\", \"accept\", \"accident\", \"according\", \"account\", \"accurate\", \"acres\", \"across\", \"act\", \"action\", \"active\", \"activity\", \"actual\", \"actually\", \"add\", \"addition\", \"additional\", \"adjective\", \"adult\", \"adventure\", \"advice\", \"affect\", \"afraid\", \"after\", \"afternoon\", \"again\", \"against\", \"age\", \"ago\", \"agree\", \"ahead\", \"aid\", \"air\", \"airplane\", \"alike\", \"alive\", \"all\", \"allow\", \"almost\", \"alone\", \"along\", \"aloud\", \"alphabet\", \"already\", \"also\", \"although\", \"am\", \"among\", \"amount\", \"ancient\", \"angle\", \"angry\", \"animal\", \"announced\", \"another\", \"answer\", \"ants\", \"any\", \"anybody\", \"anyone\", \"anything\", \"anyway\", \"anywhere\", \"apart\", \"apartment\", \"appearance\", \"apple\", \"applied\", \"appropriate\", \"are\", \"area\", \"arm\", \"army\", \"around\", \"arrange\", \"arrangement\", \"arrive\", \"arrow\", \"art\", \"article\", \"as\", \"aside\", \"ask\", \"asleep\", \"at\", \"ate\", \"atmosphere\", \"atom\", \"atomic\", \"attached\", \"attack\", \"attempt\", \"attention\", \"audience\", \"author\", \"automobile\", \"available\", \"average\", \"avoid\", \"aware\", \"away\", \"baby\", \"back\", \"bad\", \"badly\", \"bag\", \"balance\", \"ball\", \"balloon\", \"band\", \"bank\", \"bar\", \"bare\", \"bark\", \"barn\", \"base\", \"baseball\", \"basic\", \"basis\", \"basket\", \"bat\", \"battle\", \"be\", \"bean\", \"bear\", \"beat\", \"beautiful\", \"beauty\", \"became\", \"because\", \"become\", \"becoming\", \"bee\", \"been\", \"before\", \"began\", \"beginning\", \"begun\", \"behavior\", \"behind\", \"being\", \"believed\", \"bell\", \"belong\", \"below\", \"belt\", \"bend\", \"beneath\", \"bent\", \"beside\", \"best\", \"bet\", \"better\", \"between\", \"beyond\", \"bicycle\", \"bigger\", \"biggest\", \"bill\", \"birds\", \"birth\", \"birthday\", \"bit\", \"bite\", \"black\", \"blank\", \"blanket\", \"blew\", \"blind\", \"block\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \"body\", \"bone\", \"book\", \"border\", \"born\", \"both\", \"bottle\", \"bottom\", \"bound\", \"bow\", \"bowl\", \"box\", \"boy\", \"brain\", \"branch\", \"brass\", \"brave\", \"bread\", \"break\", \"breakfast\", \"breath\", \"breathe\", \"breathing\", \"breeze\", \"brick\", \"bridge\", \"brief\", \"bright\", \"bring\", \"broad\", \"broke\", \"broken\", \"brother\", \"brought\", \"brown\", \"brush\", \"buffalo\", \"build\", \"building\", \"built\", \"buried\", \"burn\", \"burst\", \"bus\", \"bush\", \"business\", \"busy\", \"but\", \"butter\", \"buy\", \"by\", \"cabin\", \"cage\", \"cake\", \"call\", \"calm\", \"came\", \"camera\", \"camp\", \"can\", \"canal\", \"cannot\", \"cap\", \"capital\", \"captain\", \"captured\", \"car\", \"carbon\", \"card\", \"care\", \"careful\", \"carefully\", \"carried\", \"carry\", \"case\", \"cast\", \"castle\", \"cat\", \"catch\", \"cattle\", \"caught\", \"cause\", \"cave\", \"cell\", \"cent\", \"center\", \"central\", \"century\", \"certain\", \"certainly\", \"chain\", \"chair\", \"chamber\", \"chance\", \"change\", \"changing\", \"chapter\", \"character\", \"characteristic\", \"charge\", \"chart\", \"check\", \"cheese\", \"chemical\", \"chest\", \"chicken\", \"chief\", \"child\", \"children\", \"choice\", \"choose\", \"chose\", \"chosen\", \"church\", \"circle\", \"circus\", \"citizen\", \"city\", \"class\", \"classroom\", \"claws\", \"clay\", \"clean\", \"clear\", \"clearly\", \"climate\", \"climb\", \"clock\", \"close\", \"closely\", \"closer\", \"cloth\", \"clothes\", \"clothing\", \"cloud\", \"club\", \"coach\", \"coal\", \"coast\", \"coat\", \"coffee\", \"cold\", \"collect\", \"college\", \"colony\", \"color\", \"column\", \"combination\", \"combine\", \"come\", \"comfortable\", \"coming\", \"command\", \"common\", \"community\", \"company\", \"compare\", \"compass\", \"complete\", \"completely\", \"complex\", \"composed\", \"composition\", \"compound\", \"concerned\", \"condition\", \"congress\", \"connected\", \"consider\", \"consist\", \"consonant\", \"constantly\", \"construction\", \"contain\", \"continent\", \"continued\", \"contrast\", \"control\", \"conversation\", \"cook\", \"cookies\", \"cool\", \"copper\", \"copy\", \"corn\", \"corner\", \"correct\", \"correctly\", \"cost\", \"cotton\", \"could\", \"count\", \"country\", \"couple\", \"courage\", \"course\", \"court\", \"cover\", \"cow\", \"cowboy\", \"crack\", \"cream\", \"create\", \"creature\", \"crew\", \"crop\", \"cross\", \"crowd\", \"cry\", \"cup\", \"curious\", \"current\", \"curve\", \"customs\", \"cut\", \"cutting\", \"daily\", \"damage\", \"dance\", \"danger\", \"dangerous\", \"dark\", \"darkness\", \"date\", \"daughter\", \"dawn\", \"day\", \"dead\", \"deal\", \"dear\", \"death\", \"decide\", \"declared\", \"deep\", \"deeply\", \"deer\", \"definition\", \"degree\", \"depend\", \"depth\", \"describe\", \"desert\", \"design\", \"desk\", \"detail\", \"determine\", \"develop\", \"development\", \"diagram\", \"diameter\", \"did\", \"die\", \"differ\", \"difference\", \"different\", \"difficult\", \"difficulty\", \"dig\", \"dinner\", \"direct\", \"direction\", \"directly\", \"dirt\", \"dirty\", \"disappear\", \"discover\", \"discovery\", \"discuss\", \"discussion\", \"disease\", \"dish\", \"distance\", \"distant\", \"divide\", \"division\", \"do\", \"doctor\", \"does\", \"dog\", \"doing\", \"doll\", \"dollar\", \"done\", \"donkey\", \"door\", \"dot\", \"double\", \"doubt\", \"down\", \"dozen\", \"draw\", \"drawn\", \"dream\", \"dress\", \"drew\", \"dried\", \"drink\", \"drive\", \"driven\", \"driver\", \"driving\", \"drop\", \"dropped\", \"drove\", \"dry\", \"duck\", \"due\", \"dug\", \"dull\", \"during\", \"dust\", \"duty\", \"each\", \"eager\", \"ear\", \"earlier\", \"early\", \"earn\", \"earth\", \"easier\", \"easily\", \"east\", \"easy\", \"eat\", \"eaten\", \"edge\", \"education\", \"effect\", \"effort\", \"egg\", \"eight\", \"either\", \"electric\", \"electricity\", \"element\", \"elephant\", \"eleven\", \"else\", \"empty\", \"end\", \"enemy\", \"energy\", \"engine\", \"engineer\", \"enjoy\", \"enough\", \"enter\", \"entire\", \"entirely\", \"environment\", \"equal\", \"equally\", \"equator\", \"equipment\", \"escape\", \"especially\", \"essential\", \"establish\", \"even\", \"evening\", \"event\", \"eventually\", \"ever\", \"every\", \"everybody\", \"everyone\", \"everything\", \"everywhere\", \"evidence\", \"exact\", \"exactly\", \"examine\", \"example\", \"excellent\", \"except\", \"exchange\", \"excited\", \"excitement\", \"exciting\", \"exclaimed\", \"exercise\", \"exist\", \"expect\", \"experience\", \"experiment\", \"explain\", \"explanation\", \"explore\", \"express\", \"expression\", \"extra\", \"eye\", \"face\", \"facing\", \"fact\", \"factor\", \"factory\", \"failed\", \"fair\", \"fairly\", \"fall\", \"fallen\", \"familiar\", \"family\", \"famous\", \"far\", \"farm\", \"farmer\", \"farther\", \"fast\", \"fastened\", \"faster\", \"fat\", \"father\", \"favorite\", \"fear\", \"feathers\", \"feature\", \"fed\", \"feed\", \"feel\", \"feet\", \"fell\", \"fellow\", \"felt\", \"fence\", \"few\", \"fewer\", \"field\", \"fierce\", \"fifteen\", \"fifth\", \"fifty\", \"fight\", \"fighting\", \"figure\", \"fill\", \"film\", \"final\", \"finally\", \"find\", \"fine\", \"finest\", \"finger\", \"finish\", \"fire\", \"fireplace\", \"firm\", \"first\", \"fish\", \"five\", \"fix\", \"flag\", \"flame\", \"flat\", \"flew\", \"flies\", \"flight\", \"floating\", \"floor\", \"flow\", \"flower\", \"fly\", \"fog\", \"folks\", \"follow\", \"food\", \"foot\", \"football\", \"for\", \"force\", \"foreign\", \"forest\", \"forget\", \"forgot\", \"forgotten\", \"form\", \"former\", \"fort\", \"forth\", \"forty\", \"forward\", \"fought\", \"found\", \"four\", \"fourth\", \"fox\", \"frame\", \"free\", \"freedom\", \"frequently\", \"fresh\", \"friend\", \"friendly\", \"frighten\", \"frog\", \"from\", \"front\", \"frozen\", \"fruit\", \"fuel\", \"full\", \"fully\", \"fun\", \"function\", \"funny\", \"fur\", \"furniture\", \"further\", \"future\", \"gain\", \"game\", \"garage\", \"garden\", \"gas\", \"gasoline\", \"gate\", \"gather\", \"gave\", \"general\", \"generally\", \"gentle\", \"gently\", \"get\", \"getting\", \"giant\", \"gift\", \"girl\", \"give\", \"given\", \"giving\", \"glad\", \"glass\", \"globe\", \"go\", \"goes\", \"gold\", \"golden\", \"gone\", \"good\", \"goose\", \"got\", \"government\", \"grabbed\", \"grade\", \"gradually\", \"grain\", \"grandfather\", \"grandmother\", \"graph\", \"grass\", \"gravity\", \"gray\", \"great\", \"greater\", \"greatest\", \"greatly\", \"green\", \"grew\", \"ground\", \"group\", \"grow\", \"grown\", \"growth\", \"guard\", \"guess\", \"guide\", \"gulf\", \"gun\", \"habit\", \"had\", \"hair\", \"half\", \"halfway\", \"hall\", \"hand\", \"handle\", \"handsome\", \"hang\", \"happen\", \"happened\", \"happily\", \"happy\", \"harbor\", \"hard\", \"harder\", \"hardly\", \"has\", \"hat\", \"have\", \"having\", \"hay\", \"he\", \"headed\", \"heading\", \"health\", \"heard\", \"hearing\", \"heart\", \"heat\", \"heavy\", \"height\", \"held\", \"hello\", \"help\", \"helpful\", \"her\", \"herd\", \"here\", \"herself\", \"hidden\", \"hide\", \"high\", \"higher\", \"highest\", \"highway\", \"hill\", \"him\", \"himself\", \"his\", \"history\", \"hit\", \"hold\", \"hole\", \"hollow\", \"home\", \"honor\", \"hope\", \"horn\", \"horse\", \"hospital\", \"hot\", \"hour\", \"house\", \"how\", \"however\", \"huge\", \"human\", \"hundred\", \"hung\", \"hungry\", \"hunt\", \"hunter\", \"hurried\", \"hurry\", \"hurt\", \"husband\", \"ice\", \"idea\", \"identity\", \"if\", \"ill\", \"image\", \"imagine\", \"immediately\", \"importance\", \"important\", \"impossible\", \"improve\", \"in\", \"inch\", \"include\", \"including\", \"income\", \"increase\", \"indeed\", \"independent\", \"indicate\", \"individual\", \"industrial\", \"industry\", \"influence\", \"information\", \"inside\", \"instance\", \"instant\", \"instead\", \"instrument\", \"interest\", \"interior\", \"into\", \"introduced\", \"invented\", \"involved\", \"iron\", \"is\", \"island\", \"it\", \"its\", \"itself\", \"jack\", \"jar\", \"jet\", \"job\", \"join\", \"joined\", \"journey\", \"joy\", \"judge\", \"jump\", \"jungle\", \"just\", \"keep\", \"kept\", \"key\", \"kids\", \"kill\", \"kind\", \"kitchen\", \"knew\", \"knife\", \"know\", \"knowledge\", \"known\", \"label\", \"labor\", \"lack\", \"lady\", \"laid\", \"lake\", \"lamp\", \"land\", \"language\", \"large\", \"larger\", \"largest\", \"last\", \"late\", \"later\", \"laugh\", \"law\", \"lay\", \"layers\", \"lead\", \"leader\", \"leaf\", \"learn\", \"least\", \"leather\", \"leave\", \"leaving\", \"led\", \"left\", \"leg\", \"length\", \"lesson\", \"let\", \"letter\", \"level\", \"library\", \"lie\", \"life\", \"lift\", \"light\", \"like\", \"likely\", \"limited\", \"line\", \"lion\", \"lips\", \"liquid\", \"list\", \"listen\", \"little\", \"live\", \"living\", \"load\", \"local\", \"locate\", \"location\", \"log\", \"lonely\", \"long\", \"longer\", \"look\", \"loose\", \"lose\", \"loss\", \"lost\", \"lot\", \"loud\", \"love\", \"lovely\", \"low\", \"lower\", \"luck\", \"lucky\", \"lunch\", \"lungs\", \"lying\", \"machine\", \"machinery\", \"mad\", \"made\", \"magic\", \"magnet\", \"mail\", \"main\", \"mainly\", \"major\", \"make\", \"making\", \"man\", \"managed\", \"manner\", \"manufacturing\", \"many\", \"map\", \"mark\", \"market\", \"married\", \"mass\", \"massage\", \"master\", \"material\", \"mathematics\", \"matter\", \"may\", \"maybe\", \"me\", \"meal\", \"mean\", \"means\", \"meant\", \"measure\", \"meat\", \"medicine\", \"meet\", \"melted\", \"member\", \"memory\", \"men\", \"mental\", \"merely\", \"met\", \"metal\", \"method\", \"mice\", \"middle\", \"might\", \"mighty\", \"mile\", \"military\", \"milk\", \"mill\", \"mind\", \"mine\", \"minerals\", \"minute\", \"mirror\", \"missing\", \"mission\", \"mistake\", \"mix\", \"mixture\", \"model\", \"modern\", \"molecular\", \"moment\", \"money\", \"monkey\", \"month\", \"mood\", \"moon\", \"more\", \"morning\", \"most\", \"mostly\", \"mother\", \"motion\", \"motor\", \"mountain\", \"mouse\", \"mouth\", \"move\", \"movement\", \"movie\", \"moving\", \"mud\", \"muscle\", \"music\", \"musical\", \"must\", \"my\", \"myself\", \"mysterious\", \"nails\", \"name\", \"nation\", \"national\", \"native\", \"natural\", \"naturally\", \"nature\", \"near\", \"nearby\", \"nearer\", \"nearest\", \"nearly\", \"necessary\", \"neck\", \"needed\", \"needle\", \"needs\", \"negative\", \"neighbor\", \"neighborhood\", \"nervous\", \"nest\", \"never\", \"new\", \"news\", \"newspaper\", \"next\", \"nice\", \"night\", \"nine\", \"no\", \"nobody\", \"nodded\", \"noise\", \"none\", \"noon\", \"nor\", \"north\", \"nose\", \"not\", \"note\", \"noted\", \"nothing\", \"notice\", \"noun\", \"now\", \"number\", \"numeral\", \"nuts\", \"object\", \"observe\", \"obtain\", \"occasionally\", \"occur\", \"ocean\", \"of\", \"off\", \"offer\", \"office\", \"officer\", \"official\", \"oil\", \"old\", \"older\", \"oldest\", \"on\", \"once\", \"one\", \"only\", \"onto\", \"open\", \"operation\", \"opinion\", \"opportunity\", \"opposite\", \"or\", \"orange\", \"orbit\", \"order\", \"ordinary\", \"organization\", \"organized\", \"origin\", \"original\", \"other\", \"ought\", \"our\", \"ourselves\", \"out\", \"outer\", \"outline\", \"outside\", \"over\", \"own\", \"owner\", \"oxygen\", \"pack\", \"package\", \"page\", \"paid\", \"pain\", \"paint\", \"pair\", \"palace\", \"pale\", \"pan\", \"paper\", \"paragraph\", \"parallel\", \"parent\", \"park\", \"part\", \"particles\", \"particular\", \"particularly\", \"partly\", \"parts\", \"party\", \"pass\", \"passage\", \"past\", \"path\", \"pattern\", \"pay\", \"peace\", \"pen\", \"pencil\", \"people\", \"per\", \"percent\", \"perfect\", \"perfectly\", \"perhaps\", \"period\", \"person\", \"personal\", \"pet\", \"phrase\", \"physical\", \"piano\", \"pick\", \"picture\", \"pictured\", \"pie\", \"piece\", \"pig\", \"pile\", \"pilot\", \"pine\", \"pink\", \"pipe\", \"pitch\", \"place\", \"plain\", \"plan\", \"plane\", \"planet\", \"planned\", \"planning\", \"plant\", \"plastic\", \"plate\", \"plates\", \"play\", \"pleasant\", \"please\", \"pleasure\", \"plenty\", \"plural\", \"plus\", \"pocket\", \"poem\", \"poet\", \"poetry\", \"point\", \"pole\", \"police\", \"policeman\", \"political\", \"pond\", \"pony\", \"pool\", \"poor\", \"popular\", \"population\", \"porch\", \"port\", \"position\", \"positive\", \"possible\", \"possibly\", \"post\", \"pot\", \"potatoes\", \"pound\", \"pour\", \"powder\", \"power\", \"powerful\", \"practical\", \"practice\", \"prepare\", \"present\", \"president\", \"press\", \"pressure\", \"pretty\", \"prevent\", \"previous\", \"price\", \"pride\", \"primitive\", \"principal\", \"principle\", \"printed\", \"private\", \"prize\", \"probably\", \"problem\", \"process\", \"produce\", \"product\", \"production\", \"program\", \"progress\", \"promised\", \"proper\", \"properly\", \"property\", \"protection\", \"proud\", \"prove\", \"provide\", \"public\", \"pull\", \"pupil\", \"pure\", \"purple\", \"purpose\", \"push\", \"put\", \"putting\", \"quarter\", \"queen\", \"question\", \"quick\", \"quickly\", \"quiet\", \"quietly\", \"quite\", \"rabbit\", \"race\", \"radio\", \"railroad\", \"rain\", \"raise\", \"ran\", \"ranch\", \"range\", \"rapidly\", \"rate\", \"rather\", \"raw\", \"rays\", \"reach\", \"read\", \"reader\", \"ready\", \"real\", \"realize\", \"rear\", \"reason\", \"recall\", \"receive\", \"recent\", \"recently\", \"recognize\", \"record\", \"red\", \"refer\", \"refused\", \"region\", \"regular\", \"related\", \"relationship\", \"religious\", \"remain\", \"remarkable\", \"remember\", \"remove\", \"repeat\", \"replace\", \"replied\", \"report\", \"represent\", \"require\", \"research\", \"respect\", \"rest\", \"result\", \"return\", \"review\", \"rhyme\", \"rhythm\", \"rice\", \"rich\", \"ride\", \"riding\", \"right\", \"ring\", \"rise\", \"rising\", \"river\", \"road\", \"roar\", \"rock\", \"rocket\", \"rocky\", \"rod\", \"roll\", \"roof\", \"room\", \"root\", \"rope\", \"rose\", \"rough\", \"round\", \"route\", \"row\", \"rubbed\", \"rubber\", \"rule\", \"ruler\", \"run\", \"running\", \"rush\", \"sad\", \"saddle\", \"safe\", \"safety\", \"said\", \"sail\", \"sale\", \"salmon\", \"salt\", \"same\", \"sand\", \"sang\", \"sat\", \"satellites\", \"satisfied\", \"save\", \"saved\", \"saw\", \"say\", \"scale\", \"scared\", \"scene\", \"school\", \"science\", \"scientific\", \"scientist\", \"score\", \"screen\", \"sea\", \"search\", \"season\", \"seat\", \"second\", \"secret\", \"section\", \"see\", \"seed\", \"seeing\", \"seems\", \"seen\", \"seldom\", \"select\", \"selection\", \"sell\", \"send\", \"sense\", \"sent\", \"sentence\", \"separate\", \"series\", \"serious\", \"serve\", \"service\", \"sets\", \"setting\", \"settle\", \"settlers\", \"seven\", \"several\", \"shade\", \"shadow\", \"shake\", \"shaking\", \"shall\", \"shallow\", \"shape\", \"share\", \"sharp\", \"she\", \"sheep\", \"sheet\", \"shelf\", \"shells\", \"shelter\", \"shine\", \"shinning\", \"ship\", \"shirt\", \"shoe\", \"shoot\", \"shop\", \"shore\", \"short\", \"shorter\", \"shot\", \"should\", \"shoulder\", \"shout\", \"show\", \"shown\", \"shut\", \"sick\", \"sides\", \"sight\", \"sign\", \"signal\", \"silence\", \"silent\", \"silk\", \"silly\", \"silver\", \"similar\", \"simple\", \"simplest\", \"simply\", \"since\", \"sing\", \"single\", \"sink\", \"sister\", \"sit\", \"sitting\", \"situation\", \"six\", \"size\", \"skill\", \"skin\", \"sky\", \"slabs\", \"slave\", \"sleep\", \"slept\", \"slide\", \"slight\", \"slightly\", \"slip\", \"slipped\", \"slope\", \"slow\", \"slowly\", \"small\", \"smaller\", \"smallest\", \"smell\", \"smile\", \"smoke\", \"smooth\", \"snake\", \"snow\", \"so\", \"soap\", \"social\", \"society\", \"soft\", \"softly\", \"soil\", \"solar\", \"sold\", \"soldier\", \"solid\", \"solution\", \"solve\", \"some\", \"somebody\", \"somehow\", \"someone\", \"something\", \"sometime\", \"somewhere\", \"son\", \"song\", \"soon\", \"sort\", \"sound\", \"source\", \"south\", \"southern\", \"space\", \"speak\", \"special\", \"species\", \"specific\", \"speech\", \"speed\", \"spell\", \"spend\", \"spent\", \"spider\", \"spin\", \"spirit\", \"spite\", \"split\", \"spoken\", \"sport\", \"spread\", \"spring\", \"square\", \"stage\", \"stairs\", \"stand\", \"standard\", \"star\", \"stared\", \"start\", \"state\", \"statement\", \"station\", \"stay\", \"steady\", \"steam\", \"steel\", \"steep\", \"stems\", \"step\", \"stepped\", \"stick\", \"stiff\", \"still\", \"stock\", \"stomach\", \"stone\", \"stood\", \"stop\", \"stopped\", \"store\", \"storm\", \"story\", \"stove\", \"straight\", \"strange\", \"stranger\", \"straw\", \"stream\", \"street\", \"strength\", \"stretch\", \"strike\", \"string\", \"strip\", \"strong\", \"stronger\", \"struck\", \"structure\", \"struggle\", \"stuck\", \"student\", \"studied\", \"studying\", \"subject\", \"substance\", \"success\", \"successful\", \"such\", \"sudden\", \"suddenly\", \"sugar\", \"suggest\", \"suit\", \"sum\", \"summer\", \"sun\", \"sunlight\", \"supper\", \"supply\", \"support\", \"suppose\", \"sure\", \"surface\", \"surprise\", \"surrounded\", \"swam\", \"sweet\", \"swept\", \"swim\", \"swimming\", \"swing\", \"swung\", \"syllable\", \"symbol\", \"system\", \"table\", \"tail\", \"take\", \"taken\", \"tales\", \"talk\", \"tall\", \"tank\", \"tape\", \"task\", \"taste\", \"taught\", \"tax\", \"tea\", \"teach\", \"teacher\", \"team\", \"tears\", \"teeth\", \"telephone\", \"television\", \"tell\", \"temperature\", \"ten\", \"tent\", \"term\", \"terrible\", \"test\", \"than\", \"thank\", \"that\", \"thee\", \"them\", \"themselves\", \"then\", \"theory\", \"there\", \"therefore\", \"these\", \"they\", \"thick\", \"thin\", \"thing\", \"think\", \"third\", \"thirty\", \"this\", \"those\", \"thou\", \"though\", \"thought\", \"thousand\", \"thread\", \"three\", \"threw\", \"throat\", \"through\", \"throughout\", \"throw\", \"thrown\", \"thumb\", \"thus\", \"thy\", \"tide\", \"tie\", \"tight\", \"tightly\", \"till\", \"time\", \"tin\", \"tiny\", \"tip\", \"tired\", \"title\", \"to\", \"tobacco\", \"today\", \"together\", \"told\", \"tomorrow\", \"tone\", \"tongue\", \"tonight\", \"too\", \"took\", \"tool\", \"top\", \"topic\", \"torn\", \"total\", \"touch\", \"toward\", \"tower\", \"town\", \"toy\", \"trace\", \"track\", \"trade\", \"traffic\", \"trail\", \"train\", \"transportation\", \"trap\", \"travel\", \"treated\", \"tree\", \"triangle\", \"tribe\", \"trick\", \"tried\", \"trip\", \"troops\", \"tropical\", \"trouble\", \"truck\", \"trunk\", \"truth\", \"try\", \"tube\", \"tune\", \"turn\", \"twelve\", \"twenty\", \"twice\", \"two\", \"type\", \"typical\", \"uncle\", \"under\", \"underline\", \"understanding\", \"unhappy\", \"union\", \"unit\", \"universe\", \"unknown\", \"unless\", \"until\", \"unusual\", \"up\", \"upon\", \"upper\", \"upward\", \"us\", \"use\", \"useful\", \"using\", \"usual\", \"usually\", \"valley\", \"valuable\", \"value\", \"vapor\", \"variety\", \"various\", \"vast\", \"vegetable\", \"verb\", \"vertical\", \"very\", \"vessels\", \"victory\", \"view\", \"village\", \"visit\", \"visitor\", \"voice\", \"volume\", \"vote\", \"vowel\", \"voyage\", \"wagon\", \"wait\", \"walk\", \"wall\", \"want\", \"war\", \"warm\", \"warn\", \"was\", \"wash\", \"waste\", \"watch\", \"water\", \"wave\", \"way\", \"we\", \"weak\", \"wealth\", \"wear\", \"weather\", \"week\", \"weigh\", \"weight\", \"welcome\", \"well\", \"went\", \"were\", \"west\", \"western\", \"wet\", \"whale\", \"what\", \"whatever\", \"wheat\", \"wheel\", \"when\", \"whenever\", \"where\", \"wherever\", \"whether\", \"which\", \"while\", \"whispered\", \"whistle\", \"white\", \"who\", \"whole\", \"whom\", \"whose\", \"why\", \"wide\", \"widely\", \"wife\", \"wild\", \"will\", \"willing\", \"win\", \"wind\", \"window\", \"wing\", \"winter\", \"wire\", \"wise\", \"wish\", \"with\", \"within\", \"without\", \"wolf\", \"women\", \"won\", \"wonder\", \"wonderful\", \"wood\", \"wooden\", \"wool\", \"word\", \"wore\", \"work\", \"worker\", \"world\", \"worried\", \"worry\", \"worse\", \"worth\", \"would\", \"wrapped\", \"write\", \"writer\", \"writing\", \"written\", \"wrong\", \"wrote\", \"yard\", \"year\", \"yellow\", \"yes\", \"yesterday\", \"yet\", \"you\", \"young\", \"younger\", \"your\", \"yourself\", \"youth\", \"zero\", \"zebra\", \"zipper\", \"zoo\", \"zulu\"];\n\nfunction words(options) {\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    var rightSize = false;\n    var wordUsed;\n\n    while (!rightSize) {\n      wordUsed = generateRandomWord();\n\n      if (wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n    }\n\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  function randInt(lessThan) {\n    return Math.floor(Math.random() * lessThan);\n  } // No arguments = generate one word\n\n\n  if (typeof options === 'undefined') {\n    return word();\n  } // Just a number = return that many words\n\n\n  if (typeof options === 'number') {\n    options = {\n      exactly: options\n    };\n  } // options supported: exactly, min, max, join\n\n\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  } // not a number = one word par string\n\n\n  if (typeof options.wordsPerString !== 'number') {\n    options.wordsPerString = 1;\n  } //not a function = returns the raw word\n\n\n  if (typeof options.formatter !== 'function') {\n    options.formatter = function (word) {\n      return word;\n    };\n  } //not a string = separator is a space\n\n\n  if (typeof options.separator !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; i < total * options.wordsPerString; i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    } else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n\n    relativeIndex++;\n\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = '';\n      relativeIndex = 0;\n    }\n  }\n\n  if (options.join) {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words; // Export the word list as it is often useful\n\nwords.wordList = wordList;","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component } from 'react';\nimport { oneOfType, func, shape, any, number, object, bool, string } from 'prop-types';\nvar isIE = !!document.documentElement.currentStyle;\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'font-family', 'font-weight', 'font-size', 'font-style', 'tab-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea = document.createElement('textarea');\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n{\n  hiddenTextarea.setAttribute('tab-index', '-1');\n  hiddenTextarea.setAttribute('aria-hidden', 'true');\n  forceHiddenStyles(hiddenTextarea);\n}\n\nfunction calculateNodeHeight(uiTextNode, uid, useCache, minRows, maxRows) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (minRows === void 0) {\n    minRows = null;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = null;\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var nodeStyling = calculateNodeStyling(uiTextNode, uid, useCache);\n\n  if (nodeStyling === null) {\n    return null;\n  }\n\n  var paddingSize = nodeStyling.paddingSize,\n      borderSize = nodeStyling.borderSize,\n      boxSizing = nodeStyling.boxSizing,\n      sizingStyle = nodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n  Object.keys(sizingStyle).forEach(function (key) {\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || 'x';\n  var minHeight = -Infinity;\n  var maxHeight = Infinity;\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height = height - paddingSize;\n  } // measure height of a textarea with a single row\n\n\n  hiddenTextarea.value = 'x';\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize; // Stores the value's rows count rendered in `hiddenTextarea`,\n  // regardless if `maxRows` or `minRows` props are passed\n\n  var valueRowCount = Math.floor(height / singleRowHeight);\n\n  if (minRows !== null) {\n    minHeight = singleRowHeight * minRows;\n\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n\n    height = Math.max(minHeight, height);\n  }\n\n  if (maxRows !== null) {\n    maxHeight = singleRowHeight * maxRows;\n\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n\n    height = Math.min(maxHeight, height);\n  }\n\n  var rowCount = Math.floor(height / singleRowHeight);\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    rowCount: rowCount,\n    valueRowCount: valueRowCount\n  };\n}\n\nfunction calculateNodeStyling(node, uid, useCache) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (useCache && computedStyleCache[uid]) {\n    return computedStyleCache[uid];\n  }\n\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = SIZING_STYLE.reduce(function (obj, name) {\n    obj[name] = style.getPropertyValue(name);\n    return obj;\n  }, {});\n  var boxSizing = sizingStyle['box-sizing']; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(style['border-right-width']) + parseFloat(style['border-left-width']) + parseFloat(style['padding-right']) + parseFloat(style['padding-left']) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle['padding-bottom']) + parseFloat(sizingStyle['padding-top']);\n  var borderSize = parseFloat(sizingStyle['border-bottom-width']) + parseFloat(sizingStyle['border-top-width']);\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache) {\n    computedStyleCache[uid] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nvar purgeCache = function purgeCache(uid) {\n  delete computedStyleCache[uid];\n};\n\nvar noop = function noop() {};\n\nvar uid = 0;\n\nvar TextareaAutosize = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TextareaAutosize, _React$Component);\n\n  function TextareaAutosize(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this._onRef = function (node) {\n      _this._ref = node;\n      var inputRef = _this.props.inputRef;\n\n      if (typeof inputRef === 'function') {\n        inputRef(node);\n        return;\n      }\n\n      inputRef.current = node;\n    };\n\n    _this._onChange = function (event) {\n      if (!_this._controlled) {\n        _this._resizeComponent();\n      }\n\n      _this.props.onChange(event, _assertThisInitialized(_this));\n    };\n\n    _this._resizeComponent = function (callback) {\n      if (callback === void 0) {\n        callback = noop;\n      }\n\n      var nodeHeight = calculateNodeHeight(_this._ref, _this._uid, _this.props.useCacheForDOMMeasurements, _this.props.minRows, _this.props.maxRows);\n\n      if (nodeHeight === null) {\n        callback();\n        return;\n      }\n\n      var height = nodeHeight.height,\n          minHeight = nodeHeight.minHeight,\n          maxHeight = nodeHeight.maxHeight,\n          rowCount = nodeHeight.rowCount,\n          valueRowCount = nodeHeight.valueRowCount;\n      _this.rowCount = rowCount;\n      _this.valueRowCount = valueRowCount;\n\n      if (_this.state.height !== height || _this.state.minHeight !== minHeight || _this.state.maxHeight !== maxHeight) {\n        _this.setState({\n          height: height,\n          minHeight: minHeight,\n          maxHeight: maxHeight\n        }, callback);\n\n        return;\n      }\n\n      callback();\n    };\n\n    _this.state = {\n      height: props.style && props.style.height || 0,\n      minHeight: -Infinity,\n      maxHeight: Infinity\n    };\n    _this._uid = uid++;\n    _this._controlled = props.value !== undefined;\n    _this._resizeLock = false;\n    return _this;\n  }\n\n  var _proto = TextareaAutosize.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _inputRef = _this$props.inputRef,\n        _maxRows = _this$props.maxRows,\n        _minRows = _this$props.minRows,\n        _onHeightChange = _this$props.onHeightChange,\n        _useCacheForDOMMeasurements = _this$props.useCacheForDOMMeasurements,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"inputRef\", \"maxRows\", \"minRows\", \"onHeightChange\", \"useCacheForDOMMeasurements\"]);\n\n    props.style = _extends({}, props.style, {\n      height: this.state.height\n    });\n    var maxHeight = Math.max(props.style.maxHeight || Infinity, this.state.maxHeight);\n\n    if (maxHeight < this.state.height) {\n      props.style.overflow = 'hidden';\n    }\n\n    return createElement(\"textarea\", _extends({}, props, {\n      onChange: this._onChange,\n      ref: this._onRef\n    }));\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._resizeComponent(); // Working around Firefox bug which runs resize listeners even when other JS is running at the same moment\n    // causing competing rerenders (due to setState in the listener) in React.\n    // More can be found here - facebook/react#6324\n\n\n    this._resizeListener = function () {\n      if (_this2._resizeLock) {\n        return;\n      }\n\n      _this2._resizeLock = true;\n\n      _this2._resizeComponent(function () {\n        _this2._resizeLock = false;\n      });\n    };\n\n    window.addEventListener('resize', this._resizeListener);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._resizeComponent();\n    }\n\n    if (this.state.height !== prevState.height) {\n      this.props.onHeightChange(this.state.height, this);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('resize', this._resizeListener);\n    purgeCache(this._uid);\n  };\n\n  return TextareaAutosize;\n}(Component);\n\nTextareaAutosize.defaultProps = {\n  inputRef: noop,\n  onChange: noop,\n  onHeightChange: noop,\n  useCacheForDOMMeasurements: false\n};\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  inputRef: oneOfType([func, shape({\n    current: any\n  })]),\n  maxRows: number,\n  minRows: number,\n  onChange: func,\n  onHeightChange: func,\n  style: object,\n  useCacheForDOMMeasurements: bool,\n  value: string\n} : void 0;\nexport default TextareaAutosize;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}